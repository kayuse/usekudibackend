"""Included icon in categories

Revision ID: 86e05d26ae2e
Revises: ee0f7928f1a2
Create Date: 2025-08-16 21:25:10.613292

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '86e05d26ae2e'
down_revision: Union[str, None] = 'ee0f7928f1a2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('langchain_pg_collection')
    # op.drop_index(op.f('ix_cmetadata_gin'), table_name='langchain_pg_embedding', postgresql_ops={'cmetadata': 'jsonb_path_ops'}, postgresql_using='gin')
    # op.drop_table('langchain_pg_embedding')
    op.add_column('categories', sa.Column('icon', sa.String(length=255), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('categories', 'icon')
    # op.create_table('langchain_pg_embedding',
    # sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    # sa.Column('collection_id', sa.UUID(), autoincrement=False, nullable=True),
    # sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(), autoincrement=False, nullable=True),
    # sa.Column('document', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('cmetadata', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    # sa.ForeignKeyConstraint(['collection_id'], ['langchain_pg_collection.uuid'], name=op.f('langchain_pg_embedding_collection_id_fkey'), ondelete='CASCADE'),
    # sa.PrimaryKeyConstraint('id', name=op.f('langchain_pg_embedding_pkey'))
    # )
    # op.create_index(op.f('ix_cmetadata_gin'), 'langchain_pg_embedding', ['cmetadata'], unique=False, postgresql_ops={'cmetadata': 'jsonb_path_ops'}, postgresql_using='gin')
    # op.create_table('langchain_pg_collection',
    # sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=False),
    # sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    # sa.Column('cmetadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    # sa.PrimaryKeyConstraint('uuid', name=op.f('langchain_pg_collection_pkey')),
    # sa.UniqueConstraint('name', name=op.f('langchain_pg_collection_name_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    # )
    # ### end Alembic commands ###
